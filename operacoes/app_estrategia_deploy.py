import streamlit as st

def detalhe_deploy():
    st.title("üöÄ Deploy do Modelo no Streamlit Cloud")
    st.write("""
    Esta p√°gina documenta o processo que foi seguido para fazer o deploy do modelo de Machine Learning no **Streamlit Cloud**,
    permitindo que ele seja acessado e utilizado de qualquer lugar.
    """)

    st.subheader("üìå 1. Estrutura do Projeto")
    st.write("""
    O projeto foi organizado da seguinte maneira antes do deploy:
    """)

    st.code("""
    üìÇ MeuProjeto/
    ‚îú‚îÄ‚îÄ üìÑ app_main.py               # Arquivo principal do Streamlit
    ‚îú‚îÄ‚îÄ üìÑ modelo/modelo_ml.pkl         # Modelo de Machine Learning salvo
    ‚îú‚îÄ‚îÄ üìÑ operadoras/app.py   # C√≥digo de pr√©-processamento dos dados
    ‚îú‚îÄ‚îÄ üìÇ dados/                # Pasta com datasets usados (se necess√°rio)
    ‚îú‚îÄ‚îÄ üìÑ requirements.txt      # Lista de depend√™ncias
    ‚îú‚îÄ‚îÄ üìÑ .gitignore            # Arquivos que n√£o devem ser versionados
    ‚îú‚îÄ‚îÄ üìÑ README.md             # Documenta√ß√£o do projeto
    """, language="plaintext")

    st.subheader("üîÑ 2. Versionamento do C√≥digo no GitHub")
    st.write("""
    O c√≥digo foi versionado no GitHub para permitir o deploy no Streamlit Cloud.
    Os seguintes comandos foram utilizados para subir o projeto:
    """)

    st.code("""
    # Inicializar reposit√≥rio Git
    git init

    # Adicionar arquivos ao reposit√≥rio
    git add .

    # Criar um commit com a vers√£o inicial
    git commit -m "Vers√£o inicial do projeto"

    # Conectar ao reposit√≥rio remoto no GitHub (substitua pela sua URL)
    git remote add origin https://github.com/usuario/meu-repositorio.git

    # Enviar os arquivos para o GitHub
    git push -u origin main
    """, language="bash")

    st.subheader("üåê 3. Deploy no Streamlit Cloud")
    st.write("""
    O deploy foi realizado no **Streamlit Cloud**, seguindo os passos abaixo:
    """)

    st.markdown("""
    1. Acesse [Streamlit Cloud](https://streamlit.io/cloud)
    2. Fa√ßa login com a conta do **GitHub**
    3. No dashboard, clique em **"New app"**
    4. Escolha o reposit√≥rio onde o c√≥digo foi versionado
    5. No campo **"Main file path"**, insira `main.py`
    6. Clique em **"Deploy"** e aguarde o carregamento da aplica√ß√£o
    """)

    st.subheader("‚öôÔ∏è 4. Criando o `requirements.txt`")
    st.write("""
    Para garantir que todas as depend√™ncias fossem instaladas corretamente no Streamlit Cloud,
    um arquivo `requirements.txt` foi criado com os seguintes pacotes:
    """)

    st.code("""
    streamlit
    pandas
    numpy
    matplotlib
    plotly
    prophet
    xgboost
    joblib
    """, language="plaintext")

    st.write("""
    O arquivo foi gerado automaticamente com:
    """)

    st.code("""
    pip freeze > requirements.txt
    """, language="bash")

    st.subheader("üîÑ 5. Atualiza√ß√£o do Modelo no Deploy")
    st.write("""
    Para atualizar o modelo de Machine Learning no Streamlit Cloud,
    o arquivo `modelo_ml.pkl` foi substitu√≠do por um novo modelo e os seguintes comandos foram usados:
    """)

    st.code("""
    # Adicionar o novo modelo ao reposit√≥rio Git
    git add modelo_ml.pkl

    # Criar um commit com a atualiza√ß√£o
    git commit -m "Atualiza√ß√£o do modelo de Machine Learning"

    # Enviar a atualiza√ß√£o para o GitHub
    git push origin main
    """, language="bash")

    st.write("""
    O **Streamlit Cloud** detectou automaticamente a atualiza√ß√£o e recarregou a aplica√ß√£o.
    Caso necess√°rio, foi poss√≠vel for√ßar a atualiza√ß√£o clicando em **"Rerun"** no dashboard do Streamlit.
    """)


